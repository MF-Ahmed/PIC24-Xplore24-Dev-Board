/* Modified on: 7-Aug-2007 *//********************************************************************\ *                                                                  * *          Control & Automation Division                           * *                                                                  * *      DR. A. Q. KHAN RESEARCH LABORATORIES                        * *                                                                  * *      Centrifuge Plant Control Software Package                   * *                                                                  * *   This document is the property of Government of Pakistan and    * *   is issued for the information of such persons who  need  to    * *   know its  contents in the course of their official  duties.    * *                                                                  * *   The information in this document is subject to change without  * *   notice and should not be construed as a committment by C & A.  * *                                                                  * *   Version K05/B1	PDOS 4.1e                                   * *                                                                  * *   Musanif Shah   13-Mar-1991                                     * *                                                                  * *   kcsdf.h - KRL Control Software Definitions File                * *             This file defines common symbols and macros used     * *             by control software package                          * *                                                                  * *   25-Apr-95  Revised for PDOS 4.1e                               * *                                                                  * *   Abdul Baseer   06-Aug-2007                                     * *   Modified for C12(B1) by A Baseer                               * *                                                                  *\********************************************************************///#include <xprim.h>/* C12(B1) channel number definition                                        */#define	C12B1	11/* Symbols for bitwise operations on a short integer variable               */#define	bit0	0x0001		/*  1st bit                                 */#define	bit1	0x0002		/*  2nd bit                                 */#define	bit2	0x0004		/*  3rd bit                                 */#define	bit3	0x0008		/*  4th bit                                 */#define	bit4	0x0010		/*  5th bit                                 */#define	bit5	0x0020		/*  6th bit                                 */#define	bit6	0x0040		/*  7th bit                                 */#define	bit7	0x0080		/*  8th bit                                 */#define	bit8	0x0100		/*  9th bit                                 */#define	bit9	0x0200		/* 10th bit                                 */#define	bit10	0x0400		/* 11th bit                                 */#define	bit11	0x0800		/* 12th bit                                 */#define	bit12	0x1000		/* 13th bit                                 */#define	bit13	0x2000		/* 14th bit                                 */#define	bit14	0x4000		/* 15th bit                                 */#define	bit15	0x8000		/* 16th bit                                 */
#define R4B		0x01
#define R3B		0x02
#define R2B		0x04
#define R1B		0x08
#define R0B		0x10
#define S1B		0x20
#define S2B		0x40
/*                                                                          * * Macros useful for bitwise operations on char type bitmaps                * *                                                                          * * SETBITchar(BmpAddr,BitNo)   sets the specified bit in the specified      * *                             char type bitmap                             * * CLRBITchar(BmpAddr,BitNo)   clears the specified bit from the specified  * *                             char type bitmap                             * * TSTBITchar(BmpAddr,BitNo)   tests the specified bit in the specified     * *                             char type bitmap and retruns True if set     * *                             otherwise returns False                      * *                                                                          * * Note the following simple operations carried out by all these macros :-  * *   (i)    Divide BitNo by 8, quotient gives the byte number within bitmap * *   (ii)   Divide BitNo by 8, remainder gives the bit number within byte   * *   (iii)  Shifting 1 left remainder times gives the bit mask within byte  * *   (iv)   Applying the relevant boolean logical operator carries out the  * *          desired operation on the bitmap.                                * *                                                                          */#define	SETBITchar(BmpAddr,BitNo)						\{														\	(((BmpAddr)[((BitNo)>>3)]) |= (1<<((BitNo)%8)));	\}#define	CLRBITchar(BmpAddr,BitNo)						\{														\	(((BmpAddr)[((BitNo)>>3)]) &= (~(1<<((BitNo)%8))));	\}#define	TSTBITchar(Addr,No) (((Addr)[((No)>>3)]) & (1<<((No)%8))?1:0)/*                                                                          * * Macros useful for bitwise operations on short int type bitmaps             * *                                                                          * * SETBITshort(BmpAddr,BitNo)   sets the specified bit in the specified     * *                              int type bitmap                             * * CLRBITshort(BmpAddr,BitNo)   clears the specified bit from the specified * *                              short type bitmap                           * * TSTBITshort(BmpAddr,BitNo)   tests the specified bit in the specified    * *                              int type bitmap and retruns True if set     * *                              otherwise returns False                     * *                                                                          * * Note the following simple operations carried out by all these macros :-  * *   (i)   Divide BitNo by 16, quotient gives the word number within bitmap * *   (ii)  Divide BitNo by 16, remainder gives the bit number within word   * *   (iii)  Shifting 1 left remainder times gives the bit mask within word  * *   (iv)   Applying the relevant boolean logical operator carries out the  * *          desired operation on the bitmap.                                * *                                                                          */#define	SETBITshort(BmpAddr,BitNo)				\{								\	(((BmpAddr)[((BitNo)>>4)]) |= (1<<((BitNo)%16)));	\}#define	CLRBITshort(BmpAddr,BitNo)				\{								\	(((BmpAddr)[((BitNo)>>4)]) &= (~(1<<((BitNo)%16))));	\}#define	TSTBITshort(Addr,No) (((Addr)[((No)>>4)]) & (1<<((No)%16))?1:0)/*                                                                          * * Macros useful for bytewise operations on bitmaps                         * *                                                                          * * SETBMP(BmpAddr,Size) sets all bits in the specified bitmap               * * CLRBMP(BmpAddr,Size) clears all bits from the specified bitmap           * * COMBMP(BmpAddr,Size) complements all bits in the specified bitmap        * * TSTBMP(BmpAddr,Size) tests the specified bitmap and returns True if      * *                      at least one bit is set otherwise returns False     * *                                                                          */#define SETBMP(BmpAddr,Size) \{ \	register unsigned short i = (Size); \	while(i--) \	(BmpAddr)[i] = 0xff; \}#define	CLRBMP(BmpAddr,Size) \{ \	register unsigned short i = (Size); \	while(i--) \	(BmpAddr)[i] = 0; \}#define	COMBMP(BmpAddr,Size) \{ \	register unsigned short i = (Size); \	while(i--) \	(BmpAddr)[i] = ~((BmpAddr)[i]); \}#define TSTBMP(BmpAddr,Size) ((tstbmp((BmpAddr),(Size))) ? 1 : 0)#define BITMASK(n) (1 << (n))		/* Convert n to its bitmask         *//* Set the local event of task n in the EV128 field of SYRAM                */#define SEV128(n) ((_syram->_ev128[((n) >> 3)]) |= (0x80 >> ((n)%8)))/* Set user task ID in the CONTID field of KRLCOM                          */#define SETTID(n) \{ \	register unsigned short i,j = TOTTSK; \	if ( (n) == K_DRV || (n) == K_SPR || (n) == K_CAM || (n) == K_SNP) \	  { \	     if (KRLCOM->CONTID[(n)]) \		{ \		    printf("\nTask Active\7\7\7\7\n"); \		    taExit(); \		} \	  } \	i = xrts(-1); \	while(j--) \	{ \	  if (KRLCOM->CONTID[j] == i) \	      KRLCOM->CONTID[j] = 0 ; \	} \	KRLCOM->CONTID[(n)] = i; \} /* Network stations codes and S.Es. frames identifiers                      */#define	K_MAS	1		/* MAS - Force System 32P                   */#define	K_CMC	2		/* CMC - Cascade Microcomputer              */#define	K_HMC	3		/* HMC - Header Microcomputer               */#define	K_IMC	4		/* IMC - Inverter Microcomputer             */#define	K_DMC	5		/* DMC - Display Microcomputer              */#define K_XMC   6		/* XMC - All XMC channels		    */#define	K_FRM	bit7		/* Frame identifier (0-Fixed  1-Variable)   *//* MSGOUT Symbols                                                           */#define	K_MCH	7		/* MSGOUT prints machine numbers            */#define	K_STG	8		/* MSGOUT prints stage designations         */#define	K_VLV	9		/* MSGOUT prints Main valve designations    */#define	K_CSP	10		/* MSGOUT prints CSP designations           */#define	K_BVL	11		/* MSGOUT prints Bypass valve designations  */#define	K_MVL	12		/* MSGOUT prints Mini valve designations    */#define	K_MIN	13		/* MSGOUT prints Mini valve designations    */#define	K_BOX	14		/* MSGOUT prints Machines Slip Box          *//* COPYBMP Symbols                                                          */#define	K_CPYBMP 1		/* Copy Src bitmap to   Dst bitmap          */#define	K_SETBIT 2		/* Set  Src bitmap in   Dst bitmap          */#define K_CLRBIT 3		/* Clr  Src bitmap from Dst bitmap          *//* Slave to Master S.Es. symbols                                            */#define	SPF_SE	1		/* System Power Fail                        */#define	SBF_SE	2		/* Standby Power Fail                       */#define	ACK_SE	3		/* Acknowledgement                          */#define	RTY_SE	4		/* Retry                                    */#define	RST_SE	5		/* System Restart                           */#define	CMF_SE	6		/* Communication Fault                      */#define	SFT_SE	7		/* System Fault                             */#define ALC_SE  8		/* Action Level Change			    */#define	ATL_SE	9		/* Action Taken Locally                     */#define	WLC_SE	10		/* Warning Level Change                     */#define	ILC_SE	11		/* Information Level Change                 */#define	PDR_SE	12		/* Plant Data Request                       */#define	DSP_SE	13		/* Plant Dtat Display                       */#define	PUS_SE	14		/* Parameter Update Snapshot                *//* Slave to Master S.Es. modifiers                                          */				/* CMF_SE Modifiers for XMC                 */#define	ISE_MF	bit0		/* Invalid S.E. code                        */#define	BRK_MF	bit1		/* Communication Break                      */#define	PAR_MF	bit2		/* Parity Error                             */#define	CSE_MF	bit3		/* Checksum Error                           */#define	CTO_MF	bit4		/* Communication Time-out                   */#define	OVR_MF	bit5		/* Data Overrun Error                       */#define	FRM_MF	bit6		/* Framing Error                            */#define	ECH_MF	bit7		/* CMF Error on C12 ElectCHannel            */				/* SFT_SE Modifiers for CMC                 */#define	ADC_MF	bit0		/* ADC Status                               */#define	ROM_MF	bit1		/* ROM Status                               */#define	RAM_MF	bit2		/* RAM Status                               */#define	RTC_MF	bit3		/* RTC Status                               */#define	MST_MF	bit4		/* MST Status                               */#define	ITE_MF	bit5		/* ITE Status                               */#define	FLG_MF	bit6		/* Machines Flag Status                     */#define CCD_MF  bit7		/* Computer Control Discrepancy		    */				/* SFT_SE Modifiers for HMC                 *#define	ADC_MF	bit0		 * ADC Status                               *#define	ROM_MF	bit1		 * ROM Status                               *#define	RAM_MF	bit2		 * RAM Status                               *#define	RTC_MF	bit3		 * RTC Status                               *#define	ITE_MF	bit5		 * ITE Status                               */				/* SFT_SE Modifiers for IMC                 *#define	REF_MF	bit0		 * Frequency Reference Status               *#define	ROM_MF	bit1		 * ROM Status                               *#define	RAM_MF	bit2		 * RAM Status                               *#define	RTC_MF	bit3		 * RTC Status                               *#define	ITE_MF	bit5		 * ITE Status                               */#define ECF_MF  bit6            /* Electronic Channel Fault                 */				/* SFT_SE Modifiers for DMC                 *#define	ROM_MF	bit1		 * ROM Status                               *#define	RAM_MF	bit2		 * RAM Status                               *#define	RTC_MF	bit3		 * RTC Status                               *#define	ITE_MF	bit5		 * ITE Status                               */				/* ALC_SE Modifiers for CMC		    *#define	CPS_MF	bit0		 * Cascade parameters status                */				/* ALC_SE Modifiers for HMC		    */#define HPS_MF	bit0		/* Header parameters status                 */#define EMS_MF  bit7		/* Emergency stop                           */				/* ALC_SE Modifiers for IMC		    */#define	FRQ_MF	bit1		/* Inverter Frequency status change         */#define	INV_MF	bit2		/* Inverter Status Change		    */#define FDA_MF	bit3		/* First Delayed Action                     */#define SDA_MF	bit4		/* Second Delayed Action                    */#define MPF_MF	bit5		/* Mains Power Fail			    */				/* ATL_SE Modifiers for CMC                 */#define	REC_MF	bit0		/* Recirculation by CMC                     */#define	VCD_MF	bit1		/* Valves Command Discrepancy               */#define	VSD_MF	bit2		/* Valves Status Discrepancy                */#define	FIM_MF	bit3		/* Feed Interrupt by CMC                    */#define	FIH_MF	bit4		/* Feed Interrupt by HMC                    */#define CSS_MF  bit5		/* Control Swicth Status		    */#define VEV_MF  bit6		/* VEVAC by CMC on mini			    */				/* WLC_SE Modifiers for CMC                 *#define	CPS_MF	bit0		 * Cascade parameters data                  */				/* WLC_SE Modifiers for HMC                 *#define HPS_MF	bit0		 * Header parameters data                   *				 * ILC_SE Modifiers for CMC                 */#define	CPS_MF	bit0		/* Cascade parameters data                  */				/* ILC_SE Modifiers for C12(B1)             *#define CPS_MF   bit0		 * Cascade parameters data                  */#define SBOX_MF  bit1		/* Machine Slip Box data                    */#define ECRD_MF  bit2           /* E-Cards (VLV,PRS,MCH) data		    */#define VCP_MF   bit3		/* Vacuum Chamber Pressure                  */#define EHP_MF   bit7		/* Evacuation Header Pressure               */				/* ILC_SE Modifiers for HMC                 *#define HPS_MF	bit0		 * Header parameters data                   *#define EMS_MF  bit7		 * Emergency stop                           *				 * ILC_SE Modifiers for IMC                 *#define	FRQ_MF	bit1		 * Inverter Frequency			    *#define MPF_MF	bit5		 * Mains Power Fail			    */				/* PDR_SE Modifiers for CMC                 *#define REF_MF	bit0		 * ADC References			    */#define FLO_MF  bit1		/* Flow Rates				    */#define CSP_MF	bit2		/* Cascade Stage Pressures		    */#define CSH_MF	bit3		/* Cascade Sub-headers			    */#define MCV_MF	bit4		/* MCV %Opening				    */#define VLV_MF	bit5		/* Valves				    */#define MCH_MF	bit6		/* Machines				    */				/* PDR_SE Modifiers for C12(B1)             *#define CPS_MF  bit0		 * Cascade parameters data                  *#define VCP_MF  bit3		 * Vacuum Chamber Pressure                  *#define EHP_MF  bit7		 * Evacuation Header Pressure               */#define MFR1_MF bit1		/* MCHs Frequencies for Mini#01 - 03        */#define MFR2_MF bit2		/* MCHs Frequencies for Mini#04 - 06        */#define MFR3_MF bit3		/* MCHs Frequencies for Mini#07 - 09        */#define MFR4_MF bit4		/* MCHs Frequencies for Mini#10 - 12        */				/* PDR_SE Modifiers for HMC                 */#define	REF_MF	bit0		/* ADC References                           */#define FHP_MF	bit1		/* Feed Header Pressures		    */#define PHP_MF	bit2		/* Product Header Pressures		    */#define WHP_MF	bit3		/* Waste Header Pressures		    */#define DHP_MF	bit4		/* Dump Header Pressures		    */#define CWT_MF	bit5		/* Chilled Water Temperarture		    */#define AUX_MF	bit6 		/* Auxilliaries				    */				/* PDR_SE Modifiers for IMC                 *#define	REF_MF	bit0		 * Frequency Reference                      *#define FRQ_MF	bit1		 * Inverter Frequency			    *#define INV_MF	bit2		 * Inverter Status			    *				 * DSP_SE Modifiers for DMC                 */#define UPP_MF	bit3		/* Cascade Upper Display		    */#define LOW_MF  bit4		/* Cascade Lower Display		    */#define HEA_MF	bit5		/* Header Display			    */				/* PUS_SE Modifiers for XMC                 */#define	PUS_MF	bit0		/* Plant Updates Snapshot Data              *//* Master to Slave S.Es. symbols                                            */#define	CMP_SE	1		/* Computer Control                         */#define	HWC_SE	2		/* Hardware Control                         *#define	ACK_SE	3		 * Acknowledgement                          *#define	RTY_SE	4		 * Retry                                    *#define	RST_SE	5		 * System Restart                           */#define	PCC_SE	6		/* Plant Control Command                    */#define	SER_SE	7		/* Significant Events Reporting             */#define	PMS_SE	8		/* Parameter Mask                           */#define	UPD_SE	9		/* Parameter Update                         *#define	PDR_SE	12		 * Plant Data Request                       *#define	DSP_SE	13		 * Plant Data Display                       *#define	PUS_SE	14		 * Parameter Update Snapshot                *//* Master to Slave S.Es. modifiers                                          */				/* RST_SE Modifiers for XMC                 */#define SWR_MF	bit0		/* Software Restart			    */#define ERM_MF	bit1		/* Shift to Edit RAM Monitor 		    *#define RAM_MF	bit2		 * RAM Destructive Diagnostic		    */#define HWR_MF	bit3		/* Hardware Restart			    */				/* PCC_SE Modifiers for CMC                 */#define CFG_MF	bit0		/* Change Valves Configuration		    *#define INV_MF	bit2		 * Inverter Status Change		    *#define VLV_MF	bit5		 * Change Valves Status			    */				/* SER_SE Modifiers for CMC                 *#define REC_MF	bit0		 * Recirculation by CMC			    */#define FFR_MF	bit1		/* Feed Flow Rate			    *#define CSP_MF	bit2		 * Cascade Stage Pressures		    *#define FIM_MF	bit3		 * Feed Interrupt by CMC		    *#define FIH_MF	bit4		 * Feed Interrupt by HWC		    *#define VLV_MF	bit5		 * Valves				    *#define MCH_MF	bit6		 * Machines				    */#define EHP0_MF bit0		/* Evacuation Header Pressure               */#define LDC_MF  bit6		/* Local DC Power failed/restored           */				/* SER_SE Modifiers for HMC                 */#define CWF_MF	bit0		/* Chilled Water Flow			    *#define FHP_MF	bit1		 * Feed Header Pressures		    *#define PHP_MF	bit2		 * Product Header Pressures		    *#define WHP_MF	bit3		 * Waste Header Pressures		    *#define DHP_MF	bit4		 * Dump Header Pressures		    *#define CWT_MF	bit5		 * Chilled Water Temperature		    */#define CAP_MF	bit6		/* Compressed Air Pressure		    *				 * SER_SE Modifiers for IMC                 *#define FRQ_MF	bit1		 * Inverter Frequency			    *#define INV_MF	bit2		 * Inverter				    *				 * PMS_SE Modifiers for CMC                 *#define FFR_MF	bit1		 * Feed Flow Rate			    *#define CSP_MF	bit2		 * Cascade Stage Pressures		    *#define VLV_MF	bit5		 * Valves				    *#define MCH_MF	bit6		 * Machines				    *				 * PMS_SE Modifiers for HMC                 *#define FHP_MF	bit1		 * Feed Header Pressures		    *#define PHP_MF  bit2		 * Product Header Pressures		    *#define WHP_MF 	bit3 		 * Waste Header Pressures		    *#define DHP_MF	bit4		 * Dump Header Pressures		    *#define CWT_MF	bit5		 * Chilled Wate Temperature		    *				 * UPD_SE Modifiers for CMC                 */#define MDY_MF	bit0		/* Machines S.Es. Delay			    *#define FLO_MF  bit1		 * Flows Limits				    */#define FFR_MF  bit1  		/* Feed Flow Limits			    *#define CSP_MF	bit2		 * CSP S.Es. Limits			    */#define WCV_MF	bit2  		/* Waste Control Valve 			    *#define RTC_MF	bit3		 * RTC Data				    */#define VDY_MF	bit4		/* Valves Action Delay			    */#define PDY_MF	bit6		/* Pressures S.Es. Delay		    */#define FCV_MF	bit7  		/* Feed Control Valve      		    */				/* UPD_SE Modifiers for HMC                 */#define	HRT_MF	bit0		/* RTC Data				    *#define FHP_MF  bit1		 * FHP S.Es. Limits			    *#define PHP_MF  bit2		 * PHP S.Es. Limits			    *#define WHP_MF  bit3		 * WHP S.Es. Limits			    *#define DHP_MF  bit4		 * DHP S.Es. Limits			    *#define	CWT_MF  bit5		 * CWT S.Es. Limits			    *#define PDY_MF  bit6		 * Pessures S.Es. Delay			    *				 * UPD_SE Modifiers for IMC                 */#define	IDY_MF	bit0		/* Inverter S.Es. Delay		            */#define FDY_MF	bit1		/* First Action Delay			    */#define SDY_MF	bit2		/* Second Action Delay			    *#define	RTC_MF	bit3		 * RTC Data				    */#define	FRD_MF	bit4		/* Freq. S.Es. delay                        *				 * UPD_SE Modifiers for DMC                 *#define	RTC_MF	bit3		 * RTC Data				    *				 * PDR_SE Modifiers for CMC                 *#define	REF_MF	bit0		 * ADC References			    *#define	FLO_MF	bit1		 * Flow Rates				    *#define	CSP_MF	bit2		 * Cascade Stage Pressures		    *#define	CSH_MF	bit3		 * Cascade Sub-headers			    *#define	MCV_MF	bit4		 * MCV %Opening				    *#define	VLV_MF	bit5		 * Valves				    *#define	MCH_MF	bit6		 * Machines				    *				 * PDR_SE Modifiers for HMC                 *#define	REF_MF	bit0		 * ADC References			    *#define	FHP_MF	bit1		 * Feed Header Pressures		    *#define	PHP_MF	bit2		 * Product Header Pressures		    *#define	WHP_MF	bit3		 * Waste Header Pressures		    *#define	DHP_MF	bit4		 * Dump Header Pressures		    *#define	CWT_MF	bit5		 * Chilled Water Temperature		    *#define	AUX_MF	bit6		 * Auxilliaries				    *				 * PDR_SE Modifiers for IMC                 *#define	REF_MF	bit0		 * Frequency References			    *#define	FRQ_MF	bit1		 * Inverter Frequency			    *#define	INV_MF	bit2		 * Inverter Status			    *				 * DSP_SE Modifiers for DMC                 */#define SNR_MF	bit1		/* Scanning Rate			    *#define INV_MF  bit2		 * Display Inverter Status		    *#define UPP_MF  bit3		 * Upper Display			    *#define LOW_MF  bit4		 * Lower Display			    *#define HEA_MF  bit5		 * Header Display			    *//* Mimic Display Flags							    */#define CMM_MF  bit6		/* Cascade Mimic			    */#define ECMM_MF bit0		/* C12 Cascade Mimic			    */#define HMM_MF  bit7		/* Header  Mimic			    *//* ISIO Boards and XMCs symbols                                             */#define TOTMIN  12		/* Total number of mini-cascades            */#define	TOTCAS	13
#define	TOTISIO	10		/* Total number of ISIO boards              */#define	TOTCHAN	8		/* Total number of channels per ISIO        */#define	TOTCMC	12		/* Total number of CMCs : Channels  1-12    */#define	TOTHMC	3		/* Total number of HMCs : Channels 67-69    */#define	TOTIMC	2		/* Total number of IMCs : Channels 70-71    */#define	TOTIFR	6		/* Total number of IFRs (Inv Frq Card)      */#define	TOTDMC	1		/* Total number of DMCs : Channels 72-72    */#define	TOTXMC	(TOTCMC+TOTHMC+TOTIMC+TOTDMC)#define	CMCDiff	(66-TOTCMC)	/* Must used to properly access HMC, IMC &  */				/* DMC channels in all channel bitmaps.	    */
#define MainCas	12
#define RECIRC_CFG	1
/* Valid I/O functions for KCDRV                                            */#define	IO_CON	1		/* Connect logically XMC channel            */#define	IO_DCN	2		/* Disconnect logically XMC channel         */#define	IO_SPE	3		/* Set XMC line speed - baud rate           */#define	IO_FRM	4		/* Send Frame to Front-End Processor        *//* I/O Request Codes for all tasks in Control S/W Package                   */#define	TOTTSK	12		/* Total number of tasks in the package     */#define K_DRV	0		/* FrontEnd Processors Communication Driver */#define	K_SPR	1		/* Computer Control Supervisory Task        */#define	K_CAM	2		/* Plant Control And Monitoring Task        */#define	K_SNP	3		/* Snapshot Generartion & Data Logging Task */#define	K_CUV	4		/* Configure, Update & Verify Task          */#define	K_OPR	5		/* Operator Control Task                    */#define	K_DCT	6		/* Displays Control Task                    */#define	K_CDR	7		/* Consolidated Data Report generating Task */#define	K_DGN	8		/* Diagnostics Task                         */#define K_TXMR  9		/* Inter Computer Communication Task        */#define K_CMM	10		/* Cascade Mimic Display Task		    */#define K_HMM	11		/* Header  Mimic Display Task               */#define K_SPR1	13		/* M->S S.Es. completion flag for SPRTSK    */#define K_CAM1	14		/* M->S S.Es. completion flag for CAMTSK    */#define K_CAM2	15		/* SNPTSK exit status flag for CAMTSK       *//* General Flags                                                            */#define K_OFL   0		/* Control computer offline		    */#define	K_ONL	1		/* Control computer online                  */#define	K_SBY	2		/* Control computer standby                 */#define	K_PME	bit2		/* Plant Monitoring Enable                  */#define	K_PMD	bit3		/* Plant Monitoring Disable                 */#define	K_PMS	bit4		/* Plant Parameter Mask Enable/Disable      */#define	K_MME	bit5		/* Mini-Cascade Monitoring Enable           */#define	K_MMD	bit6		/* Mini-Cascade Monitoring Disable          */#define	K_MMS	bit7		/* Mini-Cascade Parameter Mask Ena/Dis      */#define K_NHAR	bit5		/* NHAR_MF processing flag by CAMTSK        */#define	K_CAU	bit0		/* Caution Level Alarm                      */#define	K_WRN	bit1		/* Warning Level Alarm                      */#define	K_ACT	bit2		/* Action  Level Alarm                      *//* Electro-pneumatic valves designations                                    */				/* 1st Byte - Valves 1 to 8                 */#define	K_MFV	bit0		/* Main Feed Valves                         */#define	K_MPV	bit1		/* Main Product Valve                       */#define	K_MWV	bit2		/* Main Waste Valve                         */#define	K_MDV	bit3		/* Main Dump Valve                          */#define	K_WDV	bit4		/* Waste Dump Valve                         */#define	K_DPR9	bit5		/* Dump-Product valve at stage R9           */#define	K_DPR8	bit6		/* Dump-Product valve at stage R8           */#define	K_DPR7	bit7		/* Dump-Product valve at stage R7           */				/* 2nd Byte - Valves 9 to 16                */#define	K_DPR6	bit0		/* Dump-Product valve at stage R6           */#define	K_DPR5	bit1		/* Dump-Product valve at stage R5           */#define	K_DPR4	bit2		/* Dump-Product valve at stage R4           */#define	K_DPR3	bit3		/* Dump-Product valve at stage R3           */#define	K_DPR2	bit4		/* Dump-Product valve at stage R2           */#define	K_DPR1	bit5		/* Dump-Product valve at stage R1           */#define	K_DPR0	bit6		/* Dump-Product valve at stage R0           */#define	K_DPS1	bit7		/* Dunp-Product valve at stage S1           */				/* 3rd Byte - Valves 17 to 20               */#define	K_DPS2	bit0		/* Dump-Product valve at stage S2           */#define	K_DPS3	bit1		/* Dump-Product valve at stage S3           */#define	K_DPS4	bit2		/* Dump-Product valve at stage S4           */#define	K_DPS5	bit3		/* Dump-Product valve at stage S5           *//* Parsing Symbols and structures					    */				/* Type definitions	    		    */#define	K_EXT	0		/* Exit, terminate parsing		    */#define	K_NIL	1		/* Matches nothing, always true		    */#define	K_NUM	2		/* Matches a decimal number		    */#define	K_STR	3		/* Matches a string			    */#define	K_BLK	4		/* Matches blank or TAB			    */#define	K_EOS	5		/* Matches end of string		    */#define	K_ANY	6		/* Matches any character		    */#define	K_ALP	7		/* Matches alphabetic character		    */#define	K_DIG	8		/* Matches a digit (0 - 9)		    */#define	K_CHR	9		/* Compare with a character		    */#define	K_KYW	10		/* Compare with keyword			    */				/* Parsing structures definitions	    */typedef struct{	/* State transition structure		    */   short  Type       ;		/* Transition type			    */   char   *TypeExt   ;		/* Type extension, if type is K_CHR or K_KYW*/   short  (*ActRtn)();		/* Address of action routine		    */   short  Bitmask    ;		/* Bitmask				    */   short  *MaskPtr   ;		/* Address of mask word			    */   void   *NextState ;		/* Pointer to next state		    */} tran ;			/*					    */				/* Parsing output structure		    */typedef struct{	/* State matched output structure	    */   unsigned short  Number ;	/* Number matched in K_NUM, K_DIG	    */   short  MStrCnt   ;		/* Size of matched string		    */   short  UStrCnt   ;		/* Size of unmatched string		    */   char   *MStr     ;		/* Pointer to matched string		    */   char   *UStr     ;		/* Pointer to unmatched string		    */   char   MChar     ;		/* Character matched in any of char. type   */} state_rec ;			/* The following structure is included	    */				/* in the ParseCmd:O present in KRLLIB:LIB  */extern  state_rec  StateRec ;	/*					    *//* SNP Switches definitions						    */#define	S_CAM	  bit0		/* /CAM switch 				    */#define	S_DIR	  bit1		/* /DIR switch				    */#define	S_SE 	  bit2		/* /SE:m:n switch			    */#define	S_UPDSE	  bit3		/* /UPDATESE switch			    */#define	S_CHGLOG  bit4		/* /Switch to Next Logging Disk 	    */#define	S_LIST    bit5		/* /List Logging Disks 			    */#define	S_CREIND  bit6		/* /CREATE:INDEXFILE switch		    */#define	S_TMC	  bit7		/* /TMC switch 				    *//* Master to Master S.Es. modifiers                                         */				/* PUS_SE Modifiers for Master		    */#define CONB_MF   0		/* Casacde control bitmap (1=CMP, 0=HWC)    */#define MODB_MF   1		/* Cascade mode bitmap (1=AUT, 0=OPR)       */#define VLVB_MF   2		/* Valves SEs. disable bitmap for CAM       */#define MONB_MF   3		/* REP enabl/disabl bitmap (1=ENA, 0=DIS)   */#define P12B_MF   4		/* Machines type bitmap (1=P1, 0=P2)        */#define PWFM_MF   5		/* System/Standby power failure bitmap      */#define SFTM_MF   6		/* System fault bitmap                      */#define ECFM_MF   7            /* Electronic Channel Fault Bitmap          */#define CSER_MF   8		/* Cascade SER enable/disable status        */#define HSER_MF   9		/* Header SER enable/disable status         */#define ISER_MF   10		/* Inverter SER enable/disable status       */#define CSSB_MF   11		/* Ctrl switch status bmp(0=HWC,1=CMP ENA)  */#define NHSR_MF   12		/* Current header status register           */#define NHAR_MF   13		/* Currennt header action register          */#define NCSR_MF   14		/* Current cascades status register         */#define NCAR_MF   15		/* Current cascade action register          */#define CSPB_MF   16		/* CSP warning/action status bitmap         */#define CAOB_MF   17		/* CAM & OPR inter communication bitmap     */#define SENO_MF   18		/* S.E. number                     	    */#define LTCM_MF   19		/* Latest crashed machines         	    */#define SNRB_MF   20		/* Displays/Mimics refresh status  	    */#define CMMN_MF   21		/* Cascade no. for cascade mimic   	    */#define HMMN_MF   22		/* Header MC no. for header  mimic 	    */#define CMMS_MF   23		/* Scanning rate for cascade mimic 	    */#define HMMS_MF   24		/* Scanning rate for header  mimic 	    */#define FFRL_MF   25		/* FFR limits			            */#define CSPL_MF   26		/* CSP limits				    */#define CSPF_MF   27		/* CSP multiplication factor		    */#define FFRF_MF   28		/* FFR multiplication factor		    */#define PFRF_MF   29		/* PFR multiplication factor		    */#define MCHD_MF   30		/* Machines S.Es. delay			    */#define FHPL_MF   31		/* FHP limits				    */#define PHPL_MF   32		/* PHP limits				    */#define WHPL_MF   33		/* WHP limits				    */#define DHPL_MF   34		/* DHP limits				    */#define CWTL_MF   35		/* CWT limits				    */#define FHPF_MF   36		/* FHP multiplication factor		    */#define PHPF_MF   37		/* PHP multiplication factor		    */#define WHPF_MF   38		/* WHP multiplication factor		    */#define DHPF_MF   39		/* DHP multiplication factor		    */#define CWTF_MF   40		/* CWT multiplication factor		    */#define CMCL_MF   41		/* CMC all limits and factors		    */#define HMCL_MF   42		/* HMC all limits and factors		    */#define CWFC_MF   43		/* CWF Delay Counters         		    */#define EHPL_MF   44		/* EHP limits				    */#define EHPF_MF   45            /* EHP factor                               */#define VCPL_MF   46            /* VCP limits                               */#define VCPF_MF   47            /* VCP factor                               */#define WFRF_MF   48            /* WFR factor                               *//********************* *** ** * End Of kcsdf.h * ** *** ********************/